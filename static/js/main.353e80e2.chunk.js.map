{"version":3,"sources":["Cardtime.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cardtime","props","style","cardStyle","className","cardcont","textstyle","ctext","App","dateobj","todayDay","todayhrs","todaymin","todaysec","Date","getDate","getHours","getMinutes","getSeconds","useState","cSec","setcSec","cMin","setcMin","cHrs","setcHrs","cDays","setcDays","setTimeout","React","useEffect","styleForicon","fontSize","padding","color","Appcard","display","backgroundColor","justifyContent","alignItems","margin","width","boxShadow","borderRadius","position","zIndex","cardtext","paddingTop","letterSpacing","textTransform","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.353e80e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Cardtime(props) {\r\n    return (<div>\r\n             <div style={props.cardStyle} className='befsemi'><hr className=\"line\"/>{props.cardcont}</div>\r\n             <div style={props.textstyle}>{props.ctext}</div>\r\n           </div>);\r\n}\r\n\r\nexport default Cardtime;\r\n","import React,{useState} from 'react';\nimport './App.css';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport PinterestIcon from '@material-ui/icons/Pinterest';\nimport Cardtime from './Cardtime';\n\nfunction App(){\n  let dateobj,todayDay,todayhrs,todaymin,todaysec;\n  dateobj=new Date();\n  todayDay=dateobj.getDate();\n  todayhrs=dateobj.getHours();\n  todaymin=dateobj.getMinutes();\n  todaysec=dateobj.getSeconds();\n\n  const [cSec,setcSec] = useState(todaysec);\n  const [cMin,setcMin] = useState(todaymin);\n  const [cHrs,setcHrs] = useState(todayhrs);\n  const [cDays,setcDays] = useState(todayDay);\n\n   setTimeout(() => {\n    todaysec=dateobj.getSeconds();\n    if(todaysec<=9){\n      var tsec='0'+todaysec;\n      setcSec(tsec); \n    }else{\n      setcSec(todaysec); \n    }\n   }, 1000);\n \n    React.useEffect(() => {\n    },[cSec]);\n\n    setTimeout(() =>{     \n    todaymin=dateobj.getMinutes();\n    if(todaymin<=9){\n      var tmin='0'+todaymin;\n      setcMin(tmin); \n    }else{\n      setcMin(todaymin); \n    }\n    },1000);\n\n    React.useEffect(() => {\n    },[cMin]);\n\n    setTimeout(() =>{  \n    todayhrs=dateobj.getHours();\n    if(todayhrs<=9){\n      var thrs='0'+todayhrs;\n      setcHrs(thrs); \n    }else{\n      setcHrs(todayhrs); \n    }\n    },1000);\n\n    React.useEffect(() => {\n    },[cHrs]);\n\n\n    setTimeout(() =>{  \n      todayDay=dateobj.getDate();\n      if(todayDay<=9){\n        var tdays='0'+todayDay;\n        setcDays(tdays); \n      }else{\n        setcDays(todayDay); \n      }\n      },1000);\n  \n      React.useEffect(() => {\n      },[cDays]);\n\n  const styleForicon = {\n    fontSize: '27px',\n    padding: '0.5em',\n    color:'hsl(237, 18%, 59%)'\n  };\n\n  const Appcard = {\n     display:'flex',\n     fontSize:'4em',\n     backgroundColor:'hsl(236, 21%, 26%)',\n     justifyContent: 'center',\n     alignItems: 'center',\n     margin:'0px 15px',\n     padding:'0.4em 0.6em',\n     width: '4.3vw',\n     color:'hsl(345, 95%, 68%)',\n     boxShadow: 'rgb(28 26 32) 0px 11px 0px',\n     borderRadius:'0.2em',\n     position:'relative',\n     zIndex:'1'\n    \n  }\n\n  const cardtext = {\n     color:'hsl(237, 18%, 59%)',\n     fontSize:'1em',\n     padding:'1em',\n     paddingTop: '1.8em',\n    letterSpacing: '3px',\n    textTransform: 'uppercase',\n    position:'relative'\n  }\n\n  return (\n    <div className=\"App fluid-container\">\n      <header className=\"App-header\">\n        <h2>We're launching soon</h2>\n      </header>\n      <div className='App-content'>\n         <Cardtime cardStyle={Appcard} textstyle={cardtext} cardcont={cDays} ctext='Days'/>\n         <Cardtime cardStyle={Appcard} textstyle={cardtext} cardcont={cHrs} ctext='Hours'/>\n         <Cardtime cardStyle={Appcard} textstyle={cardtext} cardcont={cMin} ctext='Minutes'/>\n         <Cardtime cardStyle={Appcard} textstyle={cardtext} cardcont={cSec} ctext='Seconds'/>\n      </div>\n      <div className=\"social-block\">\n         <a href='https://www.instagram.com/manju_10k'><FacebookIcon style={styleForicon} className='socialicon'/></a>\n         <a href='https://www.instagram.com/manju_10k'><PinterestIcon  style={styleForicon} className='socialicon'/></a>\n         <a href='https://www.instagram.com/manju_10k'><InstagramIcon style={styleForicon}  className='socialicon'/></a>\n      </div>\n    </div>   \n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}